[versions]
# platforms
kotlin-core = "2.1.0"
kotlin-coroutine = "1.10.2"
kotlin-runtime = "4.1.0"
kotlinx-serialization = "1.8.1"
java = "17"
mindustry = "146"

# libraries
distributor = "4.1.0"
junit = "5.11.4"
testcontainers = "1.20.4"
guava = "33.4.8-jre"
hoplite = "2.9.0"
slf4j = "2.0.16"
slf4md = "1.0.0"
sql4md = "1.1.0"
password4j = "1.8.2"
rabbitmq-client = "5.25.0"
jsoup = "1.18.3"
okhttp = "4.12.0"
classgraph = "4.8.179"
logback = "1.5.18"
hikari = "6.3.0"
exposed = "0.61.0"
h2 = "2.3.232"
mariadb = "3.5.3"
caffeine = "3.2.1"
prettytime = "5.0.9.Final"
time4j = "4.38"
nohorny = "3.0.2"
jda = "5.6.1"
cloud-core = "2.0.0"
cloud-translations = "1.0.0-SNAPSHOT"
ahocorasick = "0.6.3"
minio = "8.5.17"
flex = "1.2.0"
influxdb = "7.2.0"

# gradle plugins
toxopid = "4.1.2"
indra = "3.1.3"
spotless = "7.0.4"
shadow = "8.3.7"
ktor-gradle = "3.2.0"

[libraries]
# libraries
distributor-common = { module = "com.xpdustry:distributor-common", version.ref = "distributor" }
distributor-permission-rank = { module = "com.xpdustry:distributor-permission-rank", version.ref = "distributor" }
distributor-command-cloud = { module = "com.xpdustry:distributor-command-cloud", version.ref = "distributor" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-rabbitmq = { module = "org.testcontainers:rabbitmq", version.ref = "testcontainers" }
testcontainers-minio = { module = "org.testcontainers:minio", version.ref = "testcontainers" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
password4j = { module = "com.password4j:password4j", version.ref = "password4j" }
rabbitmq-client = { module = "com.rabbitmq:amqp-client", version.ref = "rabbitmq-client" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlin-coroutine" }
kotlinx-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlin-coroutine" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
classgraph = { module = "io.github.classgraph:classgraph", version.ref = "classgraph" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
hikari = { module = "com.zaxxer:HikariCP", version.ref = "hikari" }
exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed" }
exposed-java-time = { module = "org.jetbrains.exposed:exposed-java-time", version.ref = "exposed" }
exposed-json = { module = "org.jetbrains.exposed:exposed-json", version.ref = "exposed" }
h2 = { module = "com.h2database:h2", version.ref = "h2" }
mariadb = { module = "org.mariadb.jdbc:mariadb-java-client", version.ref = "mariadb" }
caffeine = { module = "com.github.ben-manes.caffeine:caffeine", version.ref = "caffeine" }
prettytime = { module = "org.ocpsoft.prettytime:prettytime", version.ref = "prettytime" }
time4j-core = { module = "net.time4j:time4j-core", version.ref = "time4j" }
nohorny = { module = "com.xpdustry:nohorny", version.ref = "nohorny" }
jda = { module = "net.dv8tion:JDA", version.ref = "jda" }
cloud-core = { module = "org.incendo:cloud-core", version.ref = "cloud-core" }
cloud-translations-core = { module = "org.incendo:cloud-translations-core", version.ref = "cloud-translations" }
ahocorasick = { module = "org.ahocorasick:ahocorasick", version.ref = "ahocorasick" }
minio = { module = "io.minio:minio", version.ref = "minio" }
flex = { module = "com.xpdustry:flex", version.ref = "flex" }
influxdb = { module = "com.influxdb:influxdb-client-kotlin", version.ref = "influxdb" }

# gradle plugins
toxopid = { module = "com.xpdustry:toxopid", version.ref = "toxopid" }
indra-common = { module = "net.kyori:indra-common", version.ref = "indra" }
indra-licenser-spotless = { module = "net.kyori:indra-licenser-spotless", version.ref = "indra" }
spotless = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
shadow = { module = "com.gradleup.shadow:shadow-gradle-plugin", version.ref = "shadow" }
kotlin-plugin-core = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-core" }
kotlin-plugin-serialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin-core" }
ktor-gradle = { module = "io.ktor.plugin:plugin", version.ref = "ktor-gradle" }

[bundles]
cloud = [ "cloud-core", "cloud-translations-core" ]